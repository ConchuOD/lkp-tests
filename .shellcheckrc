disable=SC2154 # is referenced but not assigned
disable=SC1090 # Can't follow non-constant source. Use a directive to specify location.
disable=SC2046 # Quote this to prevent word splitting.
disable=SC2128 # Expanding an array without an index only gives the first element.
disable=SC2206 # Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.
disable=SC2053 # Quote the right-hand side of = in [[ ]] to prevent glob matching.
disable=SC2012 # Use find instead of ls to better handle non-alphanumeric filenames.
disable=SC2034 # appears unused. Verify use (or export if used externally).
disable=SC1091 # Not following: was not specified as input
disable=SC2185 # Some finds don't have a default path. Specify '.' explicitly
disable=SC2002 # Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead
disable=SC2207 # Prefer mapfile or read -a to split command output (or quote to avoid splitting)
disable=SC2181 # Check exit code directly with e.g. 'if mycmd;', not indirectly with $?
disable=SC2035 # Use ./*glob* or -- *glob* so names with dashes won't become options
disable=SC2178 # Variable was used as an array but is now assigned a string
disable=SC2038 # Use -print0/-0 or -exec + to allow for non-alphanumeric filenames
disable=SC2010 # Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames
disable=SC2166 # Prefer [ p ] || [ q ] as [ p -o q ] is not well defined
disable=SC2153 # Possible misspelling: may not be assigned, but is
disable=SC2220 # Invalid flags are not handled. Add a *) case
disable=SC2093 # Remove "exec " if script should continue after this command
disable=SC2064 # Use single quotes, otherwise this expands now rather than when signalled
